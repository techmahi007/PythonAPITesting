{"name": "test_create_other_user", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "start_exec = None\n\n    def test_create_other_user(start_exec):\n        json_input = file.read()\n>       request_json = json.loads(json_input)\n\nTestCases\\test_CreateUser.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x000001BF9F311550>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n..\\..\\..\\..\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\decoder.py:355: JSONDecodeError"}, "start": 1690458160976, "stop": 1690458160977, "uuid": "789acb64-37cf-4260-9a5f-2e514ed5624d", "historyId": "7d83058c0d497e85ccdcc9dd9b8c80a8", "testCaseId": "7d83058c0d497e85ccdcc9dd9b8c80a8", "fullName": "TestCases.test_CreateUser#test_create_other_user", "labels": [{"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_CreateUser"}, {"name": "host", "value": "IN-B9BTMW2"}, {"name": "thread", "value": "19812-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_CreateUser"}]}